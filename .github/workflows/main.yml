name: Build and Deploy with Buildpacks

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Desired name for the Docker image'
        required: true
      directory:
        description: 'Select the directory to build'
        required: true
        type: choice
        options:
          - go/mod
          - go/no-imports
          - nodejs/angular-npm
          - nodejs/no-package-manager
          - nodejs/npm
          - nodejs/react-yarn
          - nodejs/vue-npm
          - nodejs/yarn
      repo_url:
        description: 'GitHub repository URL (optional, leave empty to use current repo)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository if no repo_url provided
      if: ${{ github.event.inputs.repo_url == '' }}
      uses: actions/checkout@v2

    - name: Clone specified repository if repo_url provided
      if: ${{ github.event.inputs.repo_url != '' }}
      run: |
        git clone ${{ github.event.inputs.repo_url }} repo

    - name: Install Pack CLI
      run: |
        sudo add-apt-repository ppa:cncf-buildpacks/pack-cli -y
        sudo apt-get update
        sudo apt-get install pack-cli -y

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine working directory
      id: determine-dir
      run: |
        if [ "${{ github.event.inputs.repo_url }}" == "" ]; then
          echo "dir=${{ github.workspace }}/${{ github.event.inputs.directory }}" >> $GITHUB_ENV
        else
          echo "dir=repo/${{ github.event.inputs.directory }}" >> $GITHUB_ENV
        fi

    - name: Build and push Docker image using Buildpacks
      run: |
        image_name_with_tag="${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}:latest"
        cd ${{ env.dir }}
        pack build $image_name_with_tag --builder initializbuildpacks/securepacks
        docker push $image_name_with_tag

    - name: Display Docker Image URI
      run: |
        echo "::notice title=Docker Image URI::${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}:latest"
